// Code generated by mockery v2.33.0. DO NOT EDIT.

package mocks

import (
	entity "experiment.io/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// SegmentRepo is an autogenerated mock type for the SegmentRepo type
type SegmentRepo struct {
	mock.Mock
}

// DeleteSegment provides a mock function with given fields: slug
func (_m *SegmentRepo) DeleteSegment(slug string) error {
	ret := _m.Called(slug)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(slug)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSegment provides a mock function with given fields: seg
func (_m *SegmentRepo) NewSegment(seg entity.Segment) error {
	ret := _m.Called(seg)

	var r0 error
	if rf, ok := ret.Get(0).(func(entity.Segment) error); ok {
		r0 = rf(seg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewSegmentRepo creates a new instance of SegmentRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSegmentRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *SegmentRepo {
	mock := &SegmentRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
